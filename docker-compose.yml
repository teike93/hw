version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: helpdesk-postgres
    environment:
      POSTGRES_DB: helpdesk_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password123
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/prisma/migrations:/docker-entrypoint-initdb.d
    networks:
      - helpdesk-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: helpdesk-backend
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:password123@postgres:5432/helpdesk_db
      PORT: 3000
      HOST: 0.0.0.0
      CORS_ORIGIN: http://localhost:5173
    ports:
      - "3000:3000"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - helpdesk-network
    volumes:
      - ./backend/prisma:/app/prisma
    command: >
      sh -c "
        npx prisma migrate deploy &&
        npx prisma generate &&
        npm start
      "
    restart: unless-stopped

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: helpdesk-frontend
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - helpdesk-network
    restart: unless-stopped

networks:
  helpdesk-network:
    driver: bridge

volumes:
  postgres_data:
    driver: local